package com.java;

import java.util.Scanner;

public class PalindromeChecker {

    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        // Get user input
        System.out.print("Enter a string: ");
        String userInput = scanner.nextLine();

        // Check if the input string is a palindrome
        if (isPalindrome(userInput)) {
            System.out.println(userInput + " is a palindrome.");
        } else {
            System.out.println(userInput + " is not a palindrome.");
        }

        // Run test cases
        testPalindromeChecker();
    }

    public static boolean isPalindrome(String s) {
        // Remove spaces and convert to lowercase for case-insensitive comparison
        s = s.replaceAll("\\s", "").toLowerCase();

        // Base case: if the string is empty or has only one character, it's a palindrome
        if (s.length() <= 1) {
            return true;
        }
        // Recursive case: check if the first and last characters are the same
        else if (s.charAt(0) == s.charAt(s.length() - 1)) {
            // Call the function recursively on the substring excluding the first and last characters
            return isPalindrome(s.substring(1, s.length() - 1));
        } else {
            return false;
        }
    }

    public static void testPalindromeChecker() {
        // Test case 1: Even length palindrome
        assert isPalindrome("rotor") == true;

        // Test case 2: Odd length palindrome
        assert isPalindrome("level") == true;

        // Test case 3: Non-palindrome
        assert isPalindrome("hello") == false;

        // Test case 4: Empty string (considered a palindrome)
        assert isPalindrome("") == true;

        // Test case 5: Single character (considered a palindrome)
        assert isPalindrome("a") == true;

        // Test case 6: String with spaces
        assert isPalindrome("A man a plan a canal Panama") == true;

        System.out.println("All test cases passed!");
    }
}